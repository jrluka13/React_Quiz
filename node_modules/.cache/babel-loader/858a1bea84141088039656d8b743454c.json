{"ast":null,"code":"var _jsxFileName = \"/home/vlad/react_projects/react-quiz/src/Containers/Quiz/Quiz.js\";\nimport React, { Component } from 'react';\nimport classes from './Quiz.module.css';\nimport ActiveQuiz from '../../Components/ActiveQuiz/ActiveQuiz';\n\nclass Quiz extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isFinished: false,\n      activeQuestion: 0,\n      answerState: null,\n      quiz: [{\n        question: 'Какого цвета небо?',\n        rightAnswerId: 2,\n        id: 1,\n        answers: [{\n          text: 'Черный',\n          id: 1\n        }, {\n          text: 'Синий',\n          id: 2\n        }, {\n          text: 'Красный',\n          id: 3\n        }, {\n          text: 'Зеленый',\n          id: 4\n        }]\n      }, {\n        question: 'В каком году основали Санкт-Петербург?',\n        rightAnswerId: 3,\n        id: 2,\n        answers: [{\n          text: '1700',\n          id: 1\n        }, {\n          text: '1702',\n          id: 2\n        }, {\n          text: '1703',\n          id: 3\n        }, {\n          text: '1803',\n          id: 4\n        }]\n      }]\n    };\n\n    this.onAnswerClickHandler = answerId => {\n      if (this.state.answerState) {\n        const key = Object.keys(this.state.answerState)[0];\n\n        if (this.state.answerState[key] === 'success') {\n          return;\n        }\n      }\n\n      const question = this.state.quiz[this.state.activeQuestion];\n\n      if (question.rightAnswerId === answerId) {\n        this.setState({\n          answerState: {\n            [answerId]: 'success'\n          }\n        });\n        const timeout = window.setTimeout(() => {\n          if (this.isQuizFinished()) {\n            this.setState({});\n          } else {\n            this.setState({\n              activeQuestion: this.state.activeQuestion + 1,\n              answerState: null\n            });\n          }\n\n          window.clearTimeout(timeout);\n        }, 1000);\n      } else {\n        this.setState({\n          answerState: {\n            [answerId]: 'error'\n          }\n        });\n      }\n    };\n  }\n\n  isQuizFinished() {\n    return this.state.activeQuestion + 1 === this.state.quiz.length;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.Quiz,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.QuizWrapper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }\n    }, \"\\u041E\\u0442\\u0432\\u0435\\u0442\\u044C\\u0442\\u0435 \\u043D\\u0430 \\u0432\\u0441\\u0435 \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\\u044B\"), /*#__PURE__*/React.createElement(ActiveQuiz, {\n      onAnswerClick: this.onAnswerClickHandler,\n      question: this.state.quiz[this.state.activeQuestion].question,\n      answers: this.state.quiz[this.state.activeQuestion].answers,\n      quizLength: this.state.quiz.length,\n      answerNumber: this.state.activeQuestion + 1,\n      state: this.state.answerState,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nexport default Quiz;","map":{"version":3,"sources":["/home/vlad/react_projects/react-quiz/src/Containers/Quiz/Quiz.js"],"names":["React","Component","classes","ActiveQuiz","Quiz","state","isFinished","activeQuestion","answerState","quiz","question","rightAnswerId","id","answers","text","onAnswerClickHandler","answerId","key","Object","keys","setState","timeout","window","setTimeout","isQuizFinished","clearTimeout","length","render","QuizWrapper"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport classes from './Quiz.module.css'\nimport ActiveQuiz from '../../Components/ActiveQuiz/ActiveQuiz'\nclass Quiz extends Component{\n\nstate = {\n    isFinished: false,\n    activeQuestion:0,\n    answerState:null,\n    quiz:[\n        {\n            question: 'Какого цвета небо?',\n            rightAnswerId:2,\n            id:1,\n            answers:[\n                {text:'Черный',id:1},\n                {text:'Синий',id:2},\n                {text:'Красный',id:3},\n                {text:'Зеленый',id:4},\n            ]\n        },\n        {\n            question: 'В каком году основали Санкт-Петербург?',\n            rightAnswerId:3,\n            id:2,\n            answers:[\n                {text:'1700',id:1},\n                {text:'1702',id:2},\n                {text:'1703',id:3},\n                {text:'1803',id:4},\n            ]\n        }\n    ]\n}\n\n    onAnswerClickHandler =(answerId)=>{\n\n        if(this.state.answerState){\n            const key = Object.keys(this.state.answerState)[0]\n            if(this.state.answerState[key] === 'success'){\n              return\n            }\n        }\n        const question = this.state.quiz[this.state.activeQuestion]\n\n        if(question.rightAnswerId === answerId ){\n            this.setState({\n                answerState:{[answerId]:'success'}\n            })\n\n\n            const timeout = window.setTimeout(()=>{\n\n                if(this.isQuizFinished()){\n                this.setState({\n\n                })\n          }else{\n                    this.setState({\n                        activeQuestion: this.state.activeQuestion +1,\n                        answerState:null\n                    })\n                }\n\n                window.clearTimeout(timeout);\n            },1000)\n\n\n\n        }else{\n            this.setState({\n                answerState:{[answerId]:'error'}\n            })\n        }\n\n\n    }\n\n    isQuizFinished(){\n        return this.state.activeQuestion + 1 === this.state.quiz.length\n    }\n\n    render(){\n        return(\n            <div className={classes.Quiz}>\n                <div className={classes.QuizWrapper}>\n                    <h1>Ответьте на все вопросы</h1>\n                    <ActiveQuiz\n                    onAnswerClick = {this.onAnswerClickHandler}\n                    question = {this.state.quiz[this.state.activeQuestion].question}\n                    answers = {this.state.quiz[this.state.activeQuestion].answers}\n                    quizLength={this.state.quiz.length}\n                    answerNumber={this.state.activeQuestion +1}\n                    state={this.state.answerState}\n                    />\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Quiz"]},"metadata":{},"sourceType":"module"}